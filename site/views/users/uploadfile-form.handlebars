{{#section 'head'}}
<link rel="stylesheet" href="/styles/uploadfile-form.css">
{{/section}}

<div id="app">
	<div class="comWidth clearfix">
		<div class="upload-content">
			<label class="upload-button">
				Please select a file
				<input type="file" @change="upload(1,$event,function(e){$(e.target).val('')})" multiple>	
			</label>
			<div class="content">
				<div class="file" v-for="(v,k) in files1">
					<span class="filename">\{{v.name}}</span>
					<div class="jd">
						<div :style="{width:v.jd+'%'}"></div>
					</div>
					<span v-if="!v.txt">\{{v.jd}}%</span>
					<span v-else>\{{v.txt}}</span>
					<span class="del" @click="del(1,v.xhr,k)">del</span>
				</div>
			</div>
		</div>
		
		<div class="upload-content">
			<label class="upload-button">
				Please select a file
				<input type="file" @change="upload(2,$event,function(e){$(e.target).val('')})" multiple>	
			</label>
			<div class="content">
				<div class="file" v-for="(v,k) in files2">
					<span class="filename">\{{v.name}}</span>
					<div class="jd">
						<div :style="{width:v.jd+'%'}"></div>
					</div>
					<span v-if="!v.txt">\{{v.jd}}%</span>
					<span v-else>\{{v.txt}}</span>
					<span class="del" @click="del(2,v.xhr,k)">del</span>
				</div>
			</div>
		</div>
	</div>
	<div class="comWidth clearfix">
		<div class="upload-content">
			<label class="upload-button">
				Please select a file
				<input type="file" @change="upload(3,$event,function(e){$(e.target).val('')})" multiple>	
			</label>
			<div class="content">
				<div class="file" v-for="(v,k) in files3">
					<span class="filename">\{{v.name}}</span>
					<div class="jd">
						<div :style="{width:v.jd+'%'}"></div>
					</div>
					<span v-if="!v.txt">\{{v.jd}}%</span>
					<span v-else>\{{v.txt}}</span>
					<span class="del" @click="del(3,v.xhr,k)">del</span>
				</div>
			</div>
		</div>

		<div class="upload-content">
			<label class="upload-button">
				Please select a file
				<input type="file" @change="upload(4,$event,function(e){$(e.target).val('')})" multiple>	
			</label>
			<div class="content">
				<div class="file" v-for="(v,k) in files4">
					<span class="filename">\{{v.name}}</span>
					<div class="jd">
						<div :style="{width:v.jd+'%'}"></div>
					</div>
					<span v-if="!v.txt">\{{v.jd}}%</span>
					<span v-else>\{{v.txt}}</span>
					<span class="del" @click="del(4,v.xhr,k)">del</span>
				</div>
			</div>
		</div>
	</div>
</div>

{{#section 'jq'}}
<script src="https://cdn.bootcss.com/vue/2.5.16/vue.min.js"></script>
<script>
	new Vue({
		el:'#app',
		data:{
			files1:[],
			files2:[],
			files3:[],
			files4:[],
			urls:[
				'/users/upload'
			]
		},
		mounted:function(){
			this.files2 = [
				{
					name:'afe.rar',
					jd:100,
					txt:'uploaded!'
				},
				{
					name:'bdhfj.mp4',
					jd:100,
					txt:'uploaded!'
				}
			];
			this.files3 = [
				{
					name:'ghgggg.avi',
					jd:100,
					txt:'uploaded!'
				}
			]
		},
		methods:{
			upload:function(type,e,fn){
				var _this = this;
				var files = e.target.files;
				var thisfiles = this['files'+type];
				var url = this.urls[0];
				for(i in files){
					if(!isNaN(i)){
						var fd = new FormData();
						fd.append('file',files[i]);
						// $.ajax({
						// 	url:'/users/upload',
						// 	type:'post',
						// 	data:fd,
						// 	contentType:false,
						// 	processData:false,
						// 	success:function(data){
						// 		if(data.msg == 'success'){
						// 			thisfiles.map(function(obj){
						// 				if(obj.name === data.filename){
						// 					obj.txt = 'uploaded!';
						// 				}
						// 				return obj;
						// 			});
						// 		}
						// 	},
						// 	xhr:function(){
						// 		var xhr = $.ajaxSettings.xhr();
						// 		if(!xhr.name){
						// 			xhr.name = files[i].name;
						// 		}
						// 		if(xhr.upload){
						// 			xhr.upload.addEventListener('progress',function(e){
						// 				var cjd = parseInt(e.loaded/e.total*100);
						// 				if(cjd<80){
						// 					thisfiles.map(function(obj){
						// 						if(obj.name === xhr.name){
						// 							obj.jd = cjd
						// 						}
						// 						return obj;
						// 					});
						// 				}else{
						// 					thisfiles.map(function(obj){
						// 						if(obj.name === xhr.name){
						// 							obj.txt = 'Parsing. . .。';
						// 							obj.jd = cjd;
						// 						}
						// 						return obj;
						// 					});
						// 				}
						// 			});
						// 		}
						// 		return xhr;
						// 	}
						// });
						// 原生ajax发送
						(function(){
							var xmlHttp = new XMLHttpRequest();
							thisfiles.push({
								name:files[i].name,
								jd:0,
								txt:'',
								xhr:xmlHttp
							});
							xmlHttp.onreadystatechange = function () {
							    if (xmlHttp.readyState == 4) {
							        if (xmlHttp.status == 200) {
							            var data = JSON.parse(xmlHttp.responseText);
							            thisfiles.map(function (obj) {
							                if (obj.name == data.filename) {
							                    obj.jd = 100;
							                    obj.txt = 'uploaded!';
							                }
							                return obj;
							            });
									}
							    }
							}
							xmlHttp.open("post", '/users/upload');
							if (!xmlHttp.name) {
							    xmlHttp.name = files[i].name;
							}
							xmlHttp.upload.onprogress = function (e) {
								var cjd = parseInt(e.loaded/e.total*100);
								if (cjd <= 99) {
								    thisfiles.map(function (obj) {
								        if (obj.name === xmlHttp.name) {
								            obj.jd = cjd;
								        }
								        return obj;
								    });
								} else {
								    thisfiles.map(function (obj) {
								        if (obj.name === xmlHttp.name) {
								            obj.jd = cjd;
								            obj.txt = 'Parsing. . .';
								        }
								        return obj;
								    });
								}
								console.log(xmlHttp.name);

							};
							xmlHttp.send(fd);
						})();
					}
				}

				fn(e);
			},
			del:function(type,xhr,k){
				xhr.abort();
				var thisfiles = this['files'+type];
				thisfiles.splice(k,1);
			}
		}
	});
</script>
{{/section}}